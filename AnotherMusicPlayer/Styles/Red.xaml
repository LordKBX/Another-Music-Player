<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:local="clr-namespace:AnotherMusicPlayer"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TabControl.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TreeView.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListView.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--#region COLORS-->
    <!--#region COLORS GLOBAL-->
    <SolidColorBrush x:Key="BackgroundColor" Color="#FFAA0000"/>
    <SolidColorBrush x:Key="ForegroundColor" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="ForegroundAltColor" Color="#FF000000"/>
    <SolidColorBrush x:Key="BorderColor" Color="#FFBFBFBF"/>
    <!--#endregion-->
    <!--#region COLORS DIALOAGBOX-->
    <SolidColorBrush x:Key="DailogBoxS.TextBlock" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DailogBoxS.IconColor.Warning" Color="#FFFFD800"/>
    <SolidColorBrush x:Key="DailogBoxS.IconColor.Info" Color="#FF0094FF"/>
    <SolidColorBrush x:Key="DailogBoxS.IconColor.Error" Color="#FFFF3232"/>
    <!--#endregion-->
    <!--#region COLORS TABCONTROL-->
    <SolidColorBrush x:Key="TabControl.BorderColor" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="TabControl.BackgroundColor" Color="#FFAA0000"/>
    <SolidColorBrush x:Key="TabControl.ForegroundColor" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="TabControl.Item.Over.BackgroundColor" Color="#FFCC6666"/>
    <SolidColorBrush x:Key="TabControl.Item.Over.ForegroundColor" Color="#FF333333"/>
    <SolidColorBrush x:Key="TabControl.Item.Active.BackgroundColor" Color="#FFFF3232"/>
    <SolidColorBrush x:Key="TabControl.Item.Active.ForegroundColor" Color="#FF000000"/>
    <!--#endregion-->
    <!--#region COLORS DEFAULT BUTTON-->
    <SolidColorBrush x:Key="ButtonStyle.BackgroundColor" Color="#FF900000"/>
    <SolidColorBrush x:Key="ButtonStyle.BackgroundColor.Over" Color="#FFCC0000"/>
    <SolidColorBrush x:Key="ButtonStyle.BackgroundColor.Active" Color="#FFAA0000"/>
    <SolidColorBrush x:Key="ButtonStyle.ForegroundColor" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ButtonStyle.BackgroundColor.Disabled" Color="#FF600000"/>
    <SolidColorBrush x:Key="ButtonStyle.ForegroundColor.Disabled" Color="#FFDDDDDD"/>
    <!--#endregion-->
    <!--#region COLORS TOPBAR BUTTON-->
    <SolidColorBrush x:Key="TopBarButtonStyle.BackgroundColor" Color="#FF900000"/>
    <SolidColorBrush x:Key="TopBarButtonStyle.BackgroundColor.Over" Color="#FFCC0000"/>
    <SolidColorBrush x:Key="TopBarButtonStyle.BackgroundColor.Active" Color="#FFAA0000"/>
    <SolidColorBrush x:Key="TopBarButtonStyle.BackgroundColor.Close" Color="#FFFF6666"/>
    <SolidColorBrush x:Key="TopBarButtonStyle.BackgroundColor.Close.Active" Color="#FFFF0000"/>
    <SolidColorBrush x:Key="TopBarButtonStyle.BackgroundColor.Max" Color="#FF0094FF"/>
    <SolidColorBrush x:Key="TopBarButtonStyle.BackgroundColor.Max.Active" Color="#FF0026FF"/>
    <SolidColorBrush x:Key="TopBarButtonStyle.ForegroundColor" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="TopBarButtonStyle.BorderColor" Color="#FFBFBFBF"/>
    <!--#endregion-->
    <!--#region COLORS INPUT-->
    <SolidColorBrush x:Key="Input.BackgroundColor" Color="#FF960000"/>
    <SolidColorBrush x:Key="Input.ForegroundColor" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Input.BorderColor" Color="#FFBFBFBF"/>
    <!--#endregion-->
    <!--#region COLORS COMBOBOX-->
    <SolidColorBrush x:Key="ComboBox.BackgroundColor" Color="#FF960000"/>
    <SolidColorBrush x:Key="ComboBox.ForegroundColor" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.BorderColor" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="ComboBox.Over.BackgroundColor" Color="#FFCC0000"/>
    <SolidColorBrush x:Key="ComboBox.Over.ForegroundColor" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Over.BorderColor" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Active.BackgroundColor" Color="#FFAA0000"/>
    <SolidColorBrush x:Key="ComboBox.Active.ForegroundColor" Color="#FF000000"/>
    <SolidColorBrush x:Key="ComboBox.Active.BorderColor" Color="#FFBFBFBF"/>
    <!--#endregion-->
    <!--#region COLORS CONTEXT MENU-->
    <SolidColorBrush x:Key="ContextMenu.BackgroundColor" Color="#FFAA0000"/>
    <SolidColorBrush x:Key="ContextMenu.ForegroundColor" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="ContextMenu.BorderColor" Color="#FF700000"/>
    <!--#endregion-->
    <!--#region COLORS PLAYBACK BUTTONS-->
    <SolidColorBrush x:Key="PlaybackBtn.Static.Background" Color="#FF960000"/>
    <SolidColorBrush x:Key="PlaybackBtn.Static.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="PlaybackBtn.MouseOver.Background" Color="#FFCC0000"/>
    <SolidColorBrush x:Key="PlaybackBtn.MouseOver.Border" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="PlaybackBtn.Pressed.Background" Color="#FFAA0000"/>
    <SolidColorBrush x:Key="PlaybackBtn.Pressed.Border" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="PlaybackBtn.Disabled.Background" Color="#FFAA0000"/>
    <SolidColorBrush x:Key="PlaybackBtn.Disabled.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="PlaybackBtn.Disabled.Foreground" Color="#FF838383"/>
    <!--#endregion-->
    <!--#region COLORS PLAYBACK POSITION-->
    <SolidColorBrush x:Key="PlaybackPosition.Label.Foreground" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="PlaybackPosition.Bar.Background" Color="#FF880000"/>
    <SolidColorBrush x:Key="PlaybackPosition.Bar.Border" Color="#FF880000"/>
    <SolidColorBrush x:Key="PlaybackPosition.Bar.Foreground" Color="#FFFF6666"/>
    <!--#endregion-->
    <!--#region COLORS PLAYBACK INFO PANEL-->
    <SolidColorBrush x:Key="PlaybackInfo.Image.Background" Color="#FF000000"/>
    <!--#endregion-->
    <!--#region COLORS PLAYBACK LIST -->
    <SolidColorBrush x:Key="PlayBackListView.Item1.Background" Color="#FFCC6666"/>
    <SolidColorBrush x:Key="PlayBackListView.Item1.Foreground" Color="#FF333333"/>
    <SolidColorBrush x:Key="PlayBackListView.Item1.Border" Color="#FFCC6666"/>
    <SolidColorBrush x:Key="PlayBackListView.Item2.Background" Color="#FF960000"/>
    <SolidColorBrush x:Key="PlayBackListView.Item2.Foreground" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="PlayBackListView.Item2.Border" Color="#FF960000"/>
    <SolidColorBrush x:Key="PlayBackListView.Over.Background" Color="#FFFF9999"/>
    <SolidColorBrush x:Key="PlayBackListView.Over.Foreground" Color="#FF000000"/>
    <SolidColorBrush x:Key="PlayBackListView.Over.Border" Color="#FFFF9999"/>
    <SolidColorBrush x:Key="PlayBackListView.Active.Background" Color="#FFFFCCCC"/>
    <SolidColorBrush x:Key="PlayBackListView.Active.Foreground" Color="#FF505050"/>
    <SolidColorBrush x:Key="PlayBackListView.Active.Border" Color="#FF303030"/>
    <!--#endregion-->
    <!--#region COLORS PLAYLISTS -->
    <SolidColorBrush x:Key="PlayLsts.Background" Color="#FF960000"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Item1.Background" Color="#FFCC6666"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Item1.Foreground" Color="#FF333333"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Item1.Border" Color="#FFCC6666"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Item2.Background" Color="#FF960000"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Item2.Foreground" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Item2.Border" Color="#FF960000"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Over.Background" Color="#FFFF9999"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Over.Foreground" Color="#FF000000"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Over.Border" Color="#FFFF9999"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Active.Background" Color="#FFFFCCCC"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Active.Foreground" Color="#FF505050"/>
    <SolidColorBrush x:Key="PlayLsts.ListView.Active.Border" Color="#FF303030"/>

    <SolidColorBrush x:Key="PlayLsts.TreeView.Background" Color="#FF960000"/>
    <SolidColorBrush x:Key="PlayLsts.TreeView.Item.ForeGround" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="PlayLsts.TreeView.Item.Background.Selected" Color="#FF960000"/>
    <SolidColorBrush x:Key="PlayLsts.TreeView.Item.Background.Over" Color="#FFFF9999"/>
    <!--#endregion-->
    <!--#region COLORS LIBRARY -->
    <SolidColorBrush x:Key="FolderButton.Background" Color="#FF960000"/>
    <SolidColorBrush x:Key="FolderButton.Foreground" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="FolderButton.Border" Color="#FF303030"/>
    <SolidColorBrush x:Key="FolderButton.Over.Background" Color="#FFCC6666"/>
    <SolidColorBrush x:Key="FolderButton.Over.Foreground" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="FolderButton.Over.Border" Color="#FF000000"/>
    <SolidColorBrush x:Key="FolderButton.Active.Background" Color="#FFFF9999"/>
    <SolidColorBrush x:Key="FolderButton.Active.Foreground" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="FolderButton.Active.Border" Color="#FF959595"/>

    <SolidColorBrush x:Key="AlbumButton.Background" Color="#FF960000"/>
    <SolidColorBrush x:Key="AlbumButton.Foreground" Color="#FFE6E6E6"/>

    <SolidColorBrush x:Key="TrackButton.Background" Color="#FFCC6666"/>
    <SolidColorBrush x:Key="TrackButton.Foreground" Color="#FF000000"/>
    <SolidColorBrush x:Key="TrackButton.Border" Color="#FF000000"/>
    <SolidColorBrush x:Key="TrackButton.StarsBackground" Color="#FF000000"/>
    <SolidColorBrush x:Key="TrackButton.StarsForeground" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="TrackButton.StarsSelectionForeground" Color="#FFFF0000"/>

    <SolidColorBrush x:Key="TrackButton.Over.Background" Color="#FF960000"/>
    <SolidColorBrush x:Key="TrackButton.Over.Foreground" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="TrackButton.Over.Border" Color="#FF000000"/>
    <!--#endregion-->
    <!--#region EQUALIZER-->
    <SolidColorBrush x:Key="Equalizer.Background" Color="#FF960000"/>
    <SolidColorBrush x:Key="Equalizer.Foreground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Equalizer.Slider.Foreground" Color="#FFB9AFAF"/>
    <!--#endregion-->

    <!--#region COLORS WINDOW ADDINTOPLAYLIST -->
    <SolidColorBrush x:Key="AddIntoPlaylistWindow.Background" Color="#FF960000"/>

    <SolidColorBrush x:Key="AddIntoPlaylistWindow.List.Item1.Background" Color="#FF838383"/>
    <SolidColorBrush x:Key="AddIntoPlaylistWindow.List.Item1.Foreground" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="AddIntoPlaylistWindow.List.Item2.Background" Color="#FF777777"/>
    <SolidColorBrush x:Key="AddIntoPlaylistWindow.List.Item2.Foreground" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="AddIntoPlaylistWindow.List.ItemOver.Background" Color="#FF999999"/>
    <SolidColorBrush x:Key="AddIntoPlaylistWindow.List.ItemOver.Foreground" Color="#FFE6E6E6"/>
    <SolidColorBrush x:Key="AddIntoPlaylistWindow.List.ItemSelected.Background" Color="#FF999999"/>
    <SolidColorBrush x:Key="AddIntoPlaylistWindow.List.ItemSelected.Foreground" Color="#FFE6E6E6"/>

    <SolidColorBrush x:Key="AddIntoPlaylistWindow.OverNew.Background" Color="#7F000000"/>
    <SolidColorBrush x:Key="AddIntoPlaylistWindow.OverNew.Block.Background" Color="#FFBB0000"/>
    <SolidColorBrush x:Key="AddIntoPlaylistWindow.OverNew.Block.Border" Color="#FFBFBFBF"/>
    <SolidColorBrush x:Key="AddIntoPlaylistWindow.OverNew.Block.ForeGround" Color="#ffffff"/>
    <!--#endregion-->
    <!--#endregion-->

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region GENERIC -->
    <Style x:Key="CustomUserControl" TargetType="{x:Type local:Preview}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundColor}"/>
    </Style>
    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundColor}"/>
    </Style>

    <Style x:Key="CustomWindowBackgroundStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource BackgroundColor}"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="CustomWindowBackgroundStyleAlt" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="{StaticResource BackgroundColor}"/>
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="HQImg" TargetType="{x:Type Image}">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
    </Style>

    <Style x:Key="thumbnailBlock" TargetType="{x:Type StackPanel}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="Background" Value="#88000000"/>
    </Style>

    <Style x:Key="InputStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Background" Value="{StaticResource Input.BackgroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource Input.ForegroundColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Input.BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <!--#region COMBOBOX-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" Background="{StaticResource ComboBox.BackgroundColor}" BorderBrush="{StaticResource ComboBox.BorderColor}" BorderThickness="1" />
            <Border Grid.Column="0" CornerRadius="0" Margin="1" Background="{StaticResource ComboBox.BackgroundColor}" BorderBrush="{StaticResource ComboBox.BorderColor}" BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource ComboBox.ForegroundColor}" Margin="-2,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" Padding="5" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"  Value="False">
                            <Setter Property="Background" Value="{StaticResource ComboBox.BackgroundColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource ComboBox.ForegroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter Property="Background" Value="{StaticResource ComboBox.Over.BackgroundColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource ComboBox.Over.ForegroundColor}"/>
                        </Trigger>

                        <Trigger Property="IsSelected"  Value="True">
                            <Setter Property="Background" Value="{StaticResource ComboBox.Active.BackgroundColor}" />
                            <Setter Property="Foreground" Value="{StaticResource ComboBox.Active.ForegroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource ComboBox.ForegroundColor}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" ClickMode="Press" Grid.Column="2"
                            Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="6,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" 
                            Background="{StaticResource ComboBox.BackgroundColor}" Foreground="{StaticResource ComboBox.ForegroundColor}" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{StaticResource ComboBox.BackgroundColor}" BorderThickness="1" BorderBrush="{StaticResource ComboBox.BorderColor}"/>
                                <ScrollViewer Margin="2,2,2,2" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ComboBox.BackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="10,5,0,0"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style x:Key="CustomContextMenuStyle" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource MaterialDesignContextMenu}">
        <Setter Property="Foreground" Value="{StaticResource ContextMenu.ForegroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border BorderBrush="{StaticResource ContextMenu.BorderColor}" BorderThickness="1" 
                                Background="{StaticResource ContextMenu.BackgroundColor}" Padding="0, 5, 0, 5">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultBtnStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignPaperButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonStyle.ForegroundColor}"/>
        <Setter Property="Background" Value="{StaticResource ButtonStyle.BackgroundColor}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonStyle.BackgroundColor.Over}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonStyle.ForegroundColor}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonStyle.BackgroundColor.Active}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonStyle.ForegroundColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource ButtonStyle.BackgroundColor.Disabled}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonStyle.ForegroundColor.Disabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DialogBoxStyle" TargetType="{x:Type Window}"></Style>
    <Style x:Key="DialogBoxTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource DailogBoxS.TextBlock}" />
    </Style>
    <!--#endregion-->

    <!--#region TOP BAR-->
    <Style x:Key="TopBarTitle" TargetType="{x:Type AccessText}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
    </Style>
    <Style x:Key="TopBarBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
    </Style>

    <Style x:Key="TopBarBtnWidth" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="27px"/>
    </Style>
    <Style x:Key="TopBarBtn" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource TopBarButtonStyle.BackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TopBarButtonStyle.ForegroundColor}"/>
        <Setter Property="BorderThickness" Value="1,0,0,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TopBarButtonStyle.BackgroundColor.Over}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TopBarButtonStyle.BackgroundColor.Active}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TopBarBtnMinimize" TargetType="{x:Type Button}" BasedOn="{StaticResource TopBarBtn}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <materialDesign:PackIcon Kind="WindowMinimize" Width="20" Height="20" Foreground="{StaticResource ForegroundColor}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TopBarButtonStyle.BackgroundColor.Over}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TopBarButtonStyle.BackgroundColor.Active}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TopBarBtnClose" TargetType="{x:Type Button}" BasedOn="{StaticResource TopBarBtn}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <materialDesign:PackIcon Kind="Close" Width="20" Height="20" Foreground="{StaticResource ForegroundColor}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TopBarButtonStyle.BackgroundColor.Close}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource TopBarButtonStyle.BackgroundColor.Close.Active}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BorderColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TopBarBtnMaximize" TargetType="{x:Type Button}" BasedOn="{StaticResource TopBarBtn}">
        <Style.Triggers>
            <Trigger Property="Tag" Value="Off">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <materialDesign:PackIcon Kind="WindowMaximize" Width="20" Height="20" Foreground="{StaticResource ForegroundColor}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Tag" Value="On">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <materialDesign:PackIcon Kind="WindowRestore" Width="20" Height="20" Foreground="{StaticResource ForegroundColor}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource TopBarButtonStyle.BackgroundColor.Max}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource TopBarButtonStyle.BackgroundColor.Max.Active}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region TABCONTROLER-->
    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}" BasedOn="{StaticResource MaterialDesignNavigatilRailTabControl}">
        <Setter Property="BorderBrush" Value="{StaticResource TabControl.BorderColor}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
    </Style>

    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Height" Value="40" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="{StaticResource TabControl.Item.Over.BackgroundColor}" />
                <Setter Property="Foreground" Value="{StaticResource TabControl.Item.Over.ForegroundColor}" />
                <Setter Property="BorderThickness" Value="0,0,1,0"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsMouseOver"  Value="False">
                <Setter Property="Background" Value="{StaticResource TabControl.BackgroundColor}" />
                <Setter Property="Foreground" Value="{StaticResource TabControl.ForegroundColor}" />
                <Setter Property="BorderThickness" Value="0,0,1,0"/>
                <Setter Property="Cursor" Value="Arrow"/>
            </Trigger>
            <Trigger Property="IsSelected"  Value="True">
                <Setter Property="Background" Value="{StaticResource TabControl.Item.Active.BackgroundColor}" />
                <Setter Property="Foreground" Value="{StaticResource TabControl.Item.Active.ForegroundColor}" />
                <Setter Property="BorderThickness" Value="0,0,1,0"/>
                <Setter Property="Cursor" Value="Arrow"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region PLAYBACK BUTTONS-->
    <Style x:Key="PlaybackBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource PlaybackBtn.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PlaybackBtn.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource PlaybackBtn.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlaybackBtnOpen" TargetType="{x:Type Button}" BasedOn="{StaticResource PlaybackBtnStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <materialDesign:PackIcon x:Name="icon"  Width="24" Height="24" Kind="FolderOpen" Margin="{TemplateBinding Padding}" 
                                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                            <Setter Property="Foreground" TargetName="icon" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                            <Setter Property="Foreground" TargetName="icon" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlaybackBtnClearPlaylist" TargetType="{x:Type Button}" BasedOn="{StaticResource PlaybackBtnStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <materialDesign:PackIcon x:Name="icon" Width="24" Height="24" Kind="PlaylistRemove" Margin="{TemplateBinding Padding}" 
                                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                            <Setter Property="Foreground" TargetName="icon" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                            <Setter Property="Foreground" TargetName="icon" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlaybackBtnTrackPrev" TargetType="{x:Type Button}" BasedOn="{StaticResource PlaybackBtnStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <materialDesign:PackIcon x:Name="icon" Width="24" Height="24" Kind="SkipBackward" Margin="{TemplateBinding Padding}" 
                                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                            <Setter Property="Foreground" TargetName="icon" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                            <Setter Property="Foreground" TargetName="icon" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlaybackBtnTrackNext" TargetType="{x:Type Button}" BasedOn="{StaticResource PlaybackBtnStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <materialDesign:PackIcon x:Name="icon" Width="24" Height="24" Kind="SkipForward" Margin="{TemplateBinding Padding}" 
                                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                            <Setter Property="Foreground" TargetName="icon" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                            <Setter Property="Foreground" TargetName="icon" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlaybackBtnPlayPause" TargetType="{x:Type Button}" BasedOn="{StaticResource PlaybackBtnStyle}">
        <Style.Triggers>
            <Trigger Property="Tag" Value="Play">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <materialDesign:PackIcon x:Name="icon" Width="24" Height="24" Kind="Play" Margin="{TemplateBinding Padding}" 
                                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Tag" Value="Pause">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <materialDesign:PackIcon x:Name="icon" Width="24" Height="24" Kind="Pause" Margin="{TemplateBinding Padding}" 
                                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource PlaybackBtn.MouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource PlaybackBtn.Pressed.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlaybackBtnShuffle" TargetType="{x:Type Button}" BasedOn="{StaticResource PlaybackBtnStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <materialDesign:PackIcon x:Name="icon" Width="24" Height="24" Kind="Shuffle" Margin="{TemplateBinding Padding}" 
                                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                            <Setter Property="Foreground" TargetName="icon" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                            <Setter Property="Foreground" TargetName="icon" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlaybackBtnRepeat" TargetType="{x:Type Button}" BasedOn="{StaticResource PlaybackBtnStyle}">
        <Style.Triggers>
            <Trigger Property="Tag" Value="Off">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <materialDesign:PackIcon x:Name="icon" Width="24" Height="24" Kind="RepeatOff" Margin="{TemplateBinding Padding}" 
                                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Tag" Value="One">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <materialDesign:PackIcon x:Name="icon" Width="24" Height="24" Kind="RepeatOnce" Margin="{TemplateBinding Padding}" 
                                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Tag" Value="All">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <materialDesign:PackIcon x:Name="icon" Width="24" Height="24" Kind="Repeat" Margin="{TemplateBinding Padding}" 
                                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource PlaybackBtn.MouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{StaticResource PlaybackBtn.Pressed.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    <!--#region PLAYBACK LISTVIEW-->
    <Style x:Key="ListViewHeaderStyle0" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Background" Value="#FF666666"/>
        <Setter Property="Foreground" Value="#FFCCCCCC"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Border x:Name="border" Background="Transparent" BorderBrush="{StaticResource BorderColor}" BorderThickness="0,1,1,1" Padding="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListViewHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Background" Value="#FF666666"/>
        <Setter Property="Foreground" Value="#FFCCCCCC"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Border x:Name="border" Background="Transparent" BorderBrush="{StaticResource BorderColor}" BorderThickness="1" Padding="5,0,0,0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewHeaderStyle2" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="PlayBackListViewBorderStyle">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
    </Style>
    <Style TargetType="{x:Type ListView}" x:Key="PlayBackListViewStyle">
        <Setter Property="Background" Value="{StaticResource BackgroundColor}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
    </Style>
    <Style TargetType="{x:Type ListViewItem}" x:Key="MediaItem">
        <!--<Setter Property="ToolTip">
                    <Setter.Value>
                        <UniformGrid Columns="1">
                            <TextBlock>
                                <InlineUIContainer>
                                    <TextBlock Text="{DynamicResource Title2}"/>
                                </InlineUIContainer>
                                <Run Text=" "/>
                                <InlineUIContainer>
                                    <TextBlock Text="{Binding Name}"/>
                                </InlineUIContainer>
                            </TextBlock>
                            <TextBlock>
                                <InlineUIContainer>
                                    <TextBlock Text="{DynamicResource Album2}"/>
                                </InlineUIContainer>
                                <Run Text=" "/>
                                <InlineUIContainer>
                                    <TextBlock Text="{Binding Album}"/>
                                </InlineUIContainer>
                            </TextBlock>
                            <TextBlock>
                                <InlineUIContainer>
                                    <TextBlock Text="{DynamicResource Artist2}"/>
                                </InlineUIContainer>
                                <Run Text=" "/>
                                <InlineUIContainer>
                                    <TextBlock Text="{Binding Artist}"/>
                                </InlineUIContainer>
                            </TextBlock>
                            <TextBlock>
                                <InlineUIContainer>
                                    <TextBlock Text="{DynamicResource duration2}"/>
                                </InlineUIContainer>
                                <Run Text=" "/>
                                <InlineUIContainer>
                                    <TextBlock Text="{Binding durationS}"/>
                                </InlineUIContainer>
                            </TextBlock>
                        </UniformGrid>
                    </Setter.Value>
                </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <GridViewRowPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="MaxHeight" Value="35" />
        <Setter Property="Height" Value="35" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                <Setter Property="Background" Value="{StaticResource PlayBackListView.Item1.Background}" />
                <Setter Property="Foreground" Value="{StaticResource PlayBackListView.Item1.Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource PlayBackListView.Item1.Border}" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                <Setter Property="Background" Value="{StaticResource PlayBackListView.Item2.Background}" />
                <Setter Property="Foreground" Value="{StaticResource PlayBackListView.Item2.Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource PlayBackListView.Item2.Border}" />
            </Trigger>

            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="{StaticResource PlayBackListView.Over.Background}" />
                <Setter Property="Foreground" Value="{StaticResource PlayBackListView.Over.Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource PlayBackListView.Over.Border}" />
            </Trigger>

            <Trigger Property="IsSelected"  Value="True">
                <Setter Property="Background" Value="{StaticResource PlayBackListView.Active.Background}" />
                <Setter Property="Foreground" Value="{StaticResource PlayBackListView.Active.Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource PlayBackListView.Active.Border}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ListViewColumnItemAccessText" TargetType="{x:Type AccessText}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="FlowDirection" Value="LeftToRight"/>
    </Style>
    <!--#endregion-->
    <!--#region PLAYBACK POSITION-->
    <Style x:Key="PlaybackPositionStyle" TargetType="{x:Type Label}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource PlaybackPosition.Label.Foreground}" />
        <Setter Property="Margin" Value="6,0,0,0" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Height" Value="24" />
    </Style>
    <Style x:Key="PlaybackSizeStyle" TargetType="{x:Type Label}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource PlaybackPosition.Label.Foreground}" />
        <Setter Property="Margin" Value="6,0,0,0" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Height" Value="24" />
    </Style>
    <Style x:Key="PlaybackPositionBarStyle" TargetType="{x:Type ProgressBar}">
        <!--<Setter Property="VerticalAlignment" Value="Center" />-->
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="10px" />

        <Setter Property="Foreground" Value="{StaticResource PlaybackPosition.Bar.Foreground}" />
        <Setter Property="Background" Value="{StaticResource PlaybackPosition.Bar.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource PlaybackPosition.Bar.Border}" />
        <Setter Property="BorderThickness" Value="1,5,1,5" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>
    <!--#endregion-->
    <!--#region PLAYBACK INFO PANEL-->
    <Style x:Key="PlayBackPanelInfoImageBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="{StaticResource PlaybackInfo.Image.Background}"/>
    </Style>
    <!--#endregion-->

    <!--#region UNFILTERED-->
    <Style x:Key="BtnStyle2" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Margin" Value="0, 0, 0, 5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                                    BorderThickness="0, 1, 1, 1"
                                    BorderBrush="Black" 
                                    Background="#FFDDDDDD">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Top" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BtnStyle3" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <!--#endregion-->

    <!--#region LIBRARY -->
    <!--#region PATH BAR -->
    <Style x:Key="LibibraryNavigationPathContenerStyle" TargetType="{x:Type WrapPanel}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FlowDirection" Value="LeftToRight"/>
    </Style>

    <Style x:Key="LibibraryNavigationPathItem" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="4,0,4,2"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="TextDecorations" Value="Underline"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
    </Style>

    <Style x:Key="LibibraryNavigationPathItemAlt" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="4,0,4,2"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
    </Style>
    <!--#endregion-->

    <Style x:Key="LibibraryNavigationFilterInput" TargetType="{x:Type TextBox}" BasedOn="{StaticResource InputStyle}">
    </Style>

    <Style x:Key="LibibraryNavigationContentFolderButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="90"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="MaxWidth" Value="90"/>
        <Setter Property="MinHeight" Value="90"/>
        <Setter Property="Height" Value="90"/>
        <Setter Property="MaxHeight" Value="90"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Background" Value="{StaticResource FolderButton.Background}" />
        <Setter Property="Foreground" Value="{StaticResource FolderButton.Foreground}" />
        <Setter Property="BorderBrush" Value="{StaticResource FolderButton.Border}" />
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" ToolTip="{TemplateBinding Content}">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                            <materialDesign:PackIcon Kind="FolderOpen" VerticalAlignment="Top" HorizontalAlignment="Center" 
                                                     Width="35" Height="35" Foreground="{TemplateBinding Foreground}" Margin="5"/>
                            <AccessText TextWrapping="WrapWithOverflow" TextTrimming="CharacterEllipsis"  MinHeight="20"  MaxHeight="45" Text="{TemplateBinding Content}" 
                                        HorizontalAlignment="Stretch" TextAlignment="Center" Foreground="{TemplateBinding Foreground}" Margin="5,0,5,0"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="False">
                <Setter Property="Background" Value="{StaticResource FolderButton.Background}" />
                <Setter Property="Foreground" Value="{StaticResource FolderButton.Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource FolderButton.Border}" />
            </Trigger>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="{StaticResource FolderButton.Over.Background}" />
                <Setter Property="Foreground" Value="{StaticResource FolderButton.Over.Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource FolderButton.Over.Border}" />
            </Trigger>
            <Trigger Property="IsPressed"  Value="True">
                <Setter Property="Background" Value="{StaticResource FolderButton.Active.Background}" />
                <Setter Property="Foreground" Value="{StaticResource FolderButton.Active.Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource FolderButton.Active.Border}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LibibraryNavigationContentAlbum" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Margin" Value="0, 0, 0, 5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border"  BorderThickness="0, 2, 0, 2" BorderBrush="{StaticResource FolderButton.Border}"  
                            Background="{StaticResource AlbumButton.Background}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Top" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LibibraryNavigationContentAlbumTitle" TargetType="{x:Type AccessText}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="{StaticResource AlbumButton.Foreground}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>

    <Style x:Key="LibibraryNavigationContentAlbumDisk" TargetType="{x:Type AccessText}">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource AlbumButton.Foreground}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="Margin" Value="0, 5, 0, 0"/>
    </Style>

    <Style x:Key="LibibraryNavigationContentFolderButtonTrackButton" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{StaticResource TrackButton.Border}"/>
        <Setter Property="Background" Value="{StaticResource TrackButton.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource TrackButton.Foreground}"/>
        <Setter Property="Margin" Value="0, 3, 5, 3"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MaxHeight" Value="70"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1" CornerRadius="5" Padding="3,3,3,3">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Stretch"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource TrackButton.Over.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TrackButton.Over.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource TrackButton.Over.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LibibraryNavigationContentFolderButtonTrackButtonAccessText" TargetType="{x:Type AccessText}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="FontStyle" Value="Normal"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MaxHeight" Value="45"/>
    </Style>

    <Style x:Key="LibibraryNavigationContentFolderButtonTrackButtonStars" TargetType="{x:Type local:Rating}">
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="Zoom" Value="0.5"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="LibibraryNavigationContentFolderButtonBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource FolderButton.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="LibibraryNavigationContentFolderButtonImg" TargetType="{x:Type Image}">
        <Setter Property="MaxWidth" Value="53"/>
        <Setter Property="MaxHeight" Value="53"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="LowQuality"/>
    </Style>

    <Style x:Key="LibibraryNavigationContentFolderButtonViewBox" TargetType="{x:Type Viewbox}">
        <Setter Property="MinWidth" Value="90"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="LibibraryNavigationContentFolderButtonText" TargetType="{x:Type AccessText}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="MaxWidth" Value="70"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
    </Style>

    <Style x:Key="LibibraryNavigationContentFolderButton2" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="LibibraryNavigationContentFolderButtonText2" TargetType="{x:Type AccessText}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
    </Style>
    <!--#endregion-->

    <!--#region SETTINGS -->
    <Style x:Key="TabItemStyleSettings" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="0,1,1,1"/>
        <Setter Property="Margin" Value="-1,0,4,0"/>
    </Style>

    <Style x:Key="TabItemStyleSettingsText" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
    </Style>
    <Style x:Key="TabItemStyleSettingsText2" TargetType="{x:Type AccessText}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
    </Style>

    <Style x:Key="TabItemStyleSettingsTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Background" Value="{StaticResource Input.BackgroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource Input.ForegroundColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Input.BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30" />
        <Setter Property="Padding" Value="3,0,0,0" />
    </Style>
    <Style x:Key="TabItemStyleSettingsForLibraryFolderButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource PlaybackBtn.Static.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource PlaybackBtn.Static.Border}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PlaybackBtn.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="30" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Padding="0" 
                                Background="{TemplateBinding Background}" Cursor="Hand">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource PlaybackBtn.MouseOver.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource PlaybackBtn.Pressed.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabItemStyleSettingsForEqualizerButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource PlaybackBtn.Static.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource PlaybackBtn.Static.Border}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PlaybackBtn.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Padding="0" 
                                Background="{TemplateBinding Background}" Cursor="Hand">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource PlaybackBtn.MouseOver.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PlaybackBtn.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource PlaybackBtn.Pressed.Background}"/>
                            <Setter Property="Foreground" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PlaybackBtn.Pressed.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#region Equalizer-->
    <Style x:Key="EqualizerBlock" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource Equalizer.Background}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="150"/>
    </Style>
    <Style x:Key="EqualizerSlider" TargetType="{x:Type Slider}" BasedOn="{StaticResource MaterialDesignSlider}">
        <Setter Property="Foreground"  Value="{StaticResource Equalizer.Slider.Foreground}"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Margin" Value="8"/>
        <Setter Property="Minimum" Value="-30"/>
        <Setter Property="Maximum" Value="30"/>
        <Setter Property="Height" Value="148"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TickPlacement" Value="TopLeft"/>
        <Setter Property="TickFrequency" Value="5"/>
    </Style>
    <Style x:Key="EqualizerValues" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource Equalizer.Foreground}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    <!--#region PLAYLISTS -->
    <!--<Style x:Key="PlaylistsTreeStyle" TargetType="{x:Type TreeView}" BasedOn="{StaticResource MaterialDesignTreeView}">-->
    <Style x:Key="PlaylistsTreeStyle" TargetType="{x:Type TreeView}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="{StaticResource PlayLsts.TreeView.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1,0,0,1"/>
    </Style>
    <!--===== TreeViewItem ==========-->
    <Style x:Key="TreeViewItemExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <Path x:Name="ExpandPath" HorizontalAlignment="Left"  VerticalAlignment="Center"
                              Margin="1,1,1,1" Fill="{StaticResource PlayLsts.TreeView.Item.ForeGround}" 
                              Data="M 4 0 L 8 4 L 4 8 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Foreground" Value="{StaticResource PlayLsts.TreeView.Item.ForeGround}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Border Name="Bd0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0,0,0,3" Margin="0,3,0,0">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition Width="100*"/>
                                <ColumnDefinition Width="5"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25px"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" Style="{StaticResource TreeViewItemExpandCollapseToggleStyle}" 
                                IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                ClickMode="Press" Margin="3,0,0,0"/>
                            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" 
                                    HorizontalAlignment="Stretch"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Collapsed">
                            <EventTrigger.Actions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames 
                                            Duration="0" Storyboard.TargetProperty="(TreeViewItem.IsExpanded)">
                                            <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="true">
                            <Setter Property="Focusable" Value="false" />
                            <Setter Property="IsSelected" Value="false" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="HasItems"  Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PlayLsts.TreeView.Item.Background.Selected}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="HasItems"  Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource PlayLsts.TreeView.Item.Background.Selected}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListView}" x:Key="PlaylistsContentsStyle">
        <Setter Property="Background" Value="{StaticResource PlayLsts.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
    </Style>
    <Style TargetType="{x:Type Border}" x:Key="PlaylistsContentsStyle2">
        <Setter Property="Background" Value="{StaticResource PlayLsts.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
    </Style>
    <Style TargetType="{x:Type GridViewColumnHeader}" x:Key="PlaylistsContentsHeaderStyle">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Background" Value="#FF666666"/>
        <Setter Property="Foreground" Value="#FFCCCCCC"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Border x:Name="border" Background="Transparent" BorderBrush="{StaticResource BorderColor}" BorderThickness="0,0,1,1" Padding="5,0,0,0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" />
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListViewItem}" x:Key="PlaylistsContentsMediaItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <GridViewRowPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="MaxHeight" Value="35" />
        <Setter Property="Height" Value="35" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                <Setter Property="Background" Value="{StaticResource PlayLsts.ListView.Item1.Background}" />
                <Setter Property="Foreground" Value="{StaticResource PlayLsts.ListView.Item1.Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource PlayLsts.ListView.Item1.Border}" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                <Setter Property="Background" Value="{StaticResource PlayLsts.ListView.Item2.Background}" />
                <Setter Property="Foreground" Value="{StaticResource PlayLsts.ListView.Item2.Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource PlayLsts.ListView.Item2.Border}" />
            </Trigger>

            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="{StaticResource PlayLsts.ListView.Over.Background}" />
                <Setter Property="Foreground" Value="{StaticResource PlayLsts.ListView.Over.Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource PlayLsts.ListView.Over.Border}" />
            </Trigger>

            <Trigger Property="IsSelected"  Value="True">
                <Setter Property="Background" Value="{StaticResource PlayLsts.ListView.Active.Background}" />
                <Setter Property="Foreground" Value="{StaticResource PlayLsts.ListView.Active.Foreground}" />
                <Setter Property="BorderBrush" Value="{StaticResource PlayLsts.ListView.Active.Border}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region WINDOW TAGS EDITOR-->
    <Style x:Key="EditorInputLabel" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Margin" Value="0, 5, 0, 0"/>
    </Style>

    <Style x:Key="EditorButton1" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultBtnStyle}">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>
    <!--#endregion-->
    <!--#region WINDOW ADD INTO PLAYLISTS -->
    <Style TargetType="{x:Type ListView}" x:Key="PlaylistsWindowAddTracksListView" BasedOn="{StaticResource MaterialDesignListView}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource AddIntoPlaylistWindow.Background}" />
    </Style>
    <Style TargetType="{x:Type ListViewItem}" x:Key="PlaylistsWindowAddTracksListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="VerticalContentAlignment"  Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                <Setter Property="Background" Value="{StaticResource AddIntoPlaylistWindow.List.Item1.Background}" />
                <Setter Property="Foreground" Value="{StaticResource AddIntoPlaylistWindow.List.Item1.Foreground}" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                <Setter Property="Background" Value="{StaticResource AddIntoPlaylistWindow.List.Item2.Background}" />
                <Setter Property="Foreground" Value="{StaticResource AddIntoPlaylistWindow.List.Item2.Foreground}" />
            </Trigger>

            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="{StaticResource AddIntoPlaylistWindow.List.ItemOver.Background}" />
                <Setter Property="Foreground" Value="{StaticResource AddIntoPlaylistWindow.List.ItemOver.Foreground}" />
            </Trigger>

            <Trigger Property="IsSelected"  Value="True">
                <Setter Property="Background" Value="{StaticResource AddIntoPlaylistWindow.List.ItemSelected.Background}" />
                <Setter Property="Foreground" Value="{StaticResource AddIntoPlaylistWindow.List.ItemSelected.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
</ResourceDictionary>